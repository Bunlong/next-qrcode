{"version":3,"file":"static/webpack/static/development/pages/index.js.efb80eaa8df74a0cefad.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Link from 'next/link';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport TextField from '@material-ui/core/TextField';\nimport Select from 'react-select';\nimport { SketchPicker } from 'react-color';\nimport reactCSS from 'reactcss';\nimport { useQRCode } from 'react-hook-qrcode';\n\nimport Head from '../components/head';\nimport Nav from '../components/nav';\n\nconst styles = theme => ({\n  root: {\n    textAlign: 'center',\n    paddingTop: theme.spacing.unit * 14,\n    paddingBottom: theme.spacing.unit * 9,\n  },\n  button: {\n    margin: theme.spacing.unit,\n    color: '#fff',\n    marginTop: 20,\n  },\n  row: {\n    padding: 7,\n  },\n  fieldset: {\n    border: '1px solid #ccc',\n    borderRadius: 5,\n  },\n  textField: {\n    width: '100%',\n  },\n  disabled: {\n    pointerEvents: 'none',\n    opacity: '0.5',\n    background: '#CCC',\n  },\n  input: {\n    height: 38,\n  },\n});\n\nconst levelOptions = [\n  { value: 'L', label: 'L' },\n  { value: 'M', label: 'M' },\n  { value: 'Q', label: 'Q' },\n  { value: 'H', label: 'H' }\n];\n\nconst renderAsOptions = [\n  { value: 'canvas', label: 'Canvas' },\n  { value: 'img', label: 'Image' },\n];\n\nconst Index = (props) => {\n  const [selectedLevel, setSelectedLevel] = useState({ value: 'L', label: 'L' });\n  const [selectedRenderAs, setSelectedRenderAs] = useState({ value: 'canvas', label: 'Canvas' });\n  const [displayDarkColorPicker, setDisplayDarkColorPicker] = useState(false);\n  const [darkColor, setDarkColor] = useState('#010599FF');\n  const [displayLightColorPicker, setDisplayLightColorPicker] = useState(false);\n  const [lightColor, setLightColor] = useState('#FFBF60FF');\n  const [text, setText] = useState('https://github.com/Bunlong/react-hook-qrcode');\n  const [margin, setMargin] = useState(0);\n  const [scale, setScale] = useState(0);\n  const [width, setWidth] = useState(4);\n  const [includeOptions, setIncludeOptions] = useState(true);\n  const { classes } = props;\n  const darkStyles = reactCSS({\n    'default': {\n      color: {\n        width: '100%',\n        height: '29px',\n        borderRadius: '2px',\n        background: `${ darkColor }`,\n      },\n      swatch: {\n        width: '100%',\n        padding: '5px',\n        background: '#fff',\n        borderRadius: '1px',\n        boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\n        display: 'inline-block',\n        cursor: 'pointer',\n      },\n      popover: {\n        position: 'absolute',\n        zIndex: '2',\n      },\n      cover: {\n        position: 'fixed',\n        top: '0px',\n        right: '0px',\n        bottom: '0px',\n        left: '0px',\n      },\n    },\n  });\n  const lightStyles = reactCSS({\n    'default': {\n      color: {\n        width: '100%',\n        height: '29px',\n        borderRadius: '2px',\n        backgroundColor: `${lightColor}`,\n      },\n      swatch: {\n        width: '100%',\n        padding: '5px',\n        background: '#fff',\n        borderRadius: '1px',\n        boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\n        display: 'inline-block',\n        cursor: 'pointer',\n      },\n      popover: {\n        position: 'absolute',\n        zIndex: '2',\n      },\n      cover: {\n        position: 'fixed',\n        top: '0px',\n        right: '0px',\n        bottom: '0px',\n        left: '0px',\n      },\n    },\n  });\n\n  const handleClickDark = () => {\n    setDisplayDarkColorPicker(!displayDarkColorPicker);\n  }\n\n  const handleCloseDark = () => {\n    setDisplayDarkColorPicker(false);\n  }\n\n  const handleChangeDark = (color) => {\n    setDarkColor(color.hex);\n  }\n\n  const handleChangeLevel = (selectedLevel) => {\n    setSelectedLevel(selectedLevel);\n  }\n\n  const handleChangeRenderAs = (selectedRenderAs) => {\n    setSelectedRenderAs(selectedRenderAs);\n  }\n\n  const handleClickLight = () => {\n    setDisplayLightColorPicker(!displayLightColorPicker);\n  }\n\n  const handleCloseLight = () => {\n    setDisplayLightColorPicker(false);\n  }\n\n  const handleChangeLight = (color) => {\n    setLightColor(color.hex);\n  }\n\n  const [inputRef] = useQRCode({\n    text: text,\n    options: {\n      level: selectedLevel,\n      margin: margin,\n      scale: scale,\n      width: width,\n      color: {\n        dark: darkColor,\n        light: lightColor,\n      },\n    },\n  });\n\n  const handleChange = (event) => {\n    const name = event.target.name\n    if (name === 'text') {\n      setText(event.target.value)\n    } else if (name === 'margin') {\n      setMargin(event.target.value)\n    } else if (name === 'scale') {\n      setScale(event.target.value)\n    } else if (name === 'width') {\n      setWidth(event.target.value)\n    }\n  }\n\n  const handleChangeCheckbox = (event) => {\n    setIncludeOptions(event.target.checked)\n  }\n\n  return (\n    <div>\n      <Head\n        title=\"next-qrcode\"\n        description=\"React hooks for generating QR code.\"\n        keywords=\"react, qrcode, react-hooks, hooks, typescript, next-qrcode, react-components, javascript, qrcode-generator\"\n      />\n      <Nav />\n      <div style={{ display: 'flex', margin: 40 }}>\n        <Grid container spacing={24} direction=\"column\">\n          <Grid container item spacing={0} justify=\"center\">\n            <Grid item lg={6} xl={6} xs={12} style={{textAlign: 'center'}}>\n              <Typography variant=\"h4\" gutterBottom>\n                DEMO\n              </Typography>\n              <hr/>\n            </Grid>\n          </Grid>\n          <Grid container item spacing={0} justify=\"center\" style={{paddingTop: 5, paddingBottom: 7}}>\n            <Grid item lg={6} xl={6} xs={12}>\n              <label>Render as:</label>\n            </Grid>\n          </Grid>\n          <Grid container item spacing={0} justify=\"center\" style={{ paddingTop: 7, paddingBottom: 7}}>\n            <Grid item lg={6} xl={6} xs={12}>\n            <Select\n              value={selectedRenderAs}\n              onChange={handleChangeRenderAs}\n              options={renderAsOptions}\n            />\n            </Grid>\n          </Grid>\n          <Grid container item spacing={0} justify=\"center\" style={{paddingTop: 7, paddingBottom: 7}}>\n            <Grid item lg={6} xl={6} xs={12}>\n              <label>Text:</label>\n            </Grid>\n          </Grid>\n          <Grid container item spacing={0} justify=\"center\" style={{paddingTop: 7, paddingBottom: 7}}>\n            <Grid item lg={6} xl={6} xs={12}>\n              <TextField\n                variant=\"outlined\"\n                multiline\n                rows={4}\n                value={text}\n                className={classes.textField}\n                onChange={handleChange}\n                name='text'\n              />\n            </Grid>\n          </Grid>\n          <Grid container item spacing={0} justify=\"center\" style={{ paddingBottom: 5}}>\n            <Grid item lg={6} xl={6} xs={12}>\n              <label>Include Options:</label>\n              <Checkbox\n                defaultChecked\n                color=\"primary\"\n                inputProps={{ 'aria-label': 'secondary checkbox' }}\n                onChange={handleChangeCheckbox}\n              />\n            </Grid>\n          </Grid>\n          <Grid container item spacing={0} justify=\"center\" className={classes.row}>\n            <Grid item lg={6} xl={6} xs={12}>\n              <fieldset className={classes.fieldset}>\n                <legend>Options</legend>\n                <Grid container item spacing={0} justify=\"center\" style={{ paddingTop: 15, paddingLeft: 7, paddingBottom: 7, paddingRight: 7}}>\n                  <Grid item lg={12} xl={12} xs={12}>\n                    <label>Level:</label>\n                  </Grid>\n                </Grid>\n                <Grid container item spacing={0} justify=\"center\" className={classes.row}>\n                  <Grid item lg={12} xl={12} xs={12}>\n                    <Select\n                      value={selectedLevel}\n                      onChange={handleChangeLevel}\n                      options={levelOptions}\n                      isDisabled={!includeOptions}\n                    />\n                  </Grid>\n                </Grid>\n                <Grid container item spacing={0} justify=\"center\" className={classes.row}>\n                  <Grid item lg={12} xl={12} xs={12}>\n                    <label>Margin:</label>\n                  </Grid>\n                </Grid>\n                <Grid container item spacing={0} justify=\"center\" className={classes.row}>\n                  <Grid item lg={12} xl={12} xs={12}>\n                    <TextField\n                      variant=\"outlined\"\n                      value={margin}\n                      className={classes.textField}\n                      name='margin'\n                      onChange={handleChange}\n                      disabled={includeOptions ? '' : 'disabled'}\n                      type=\"number\"\n                      InputProps={{\n                        className: classes.input\n                      }}\n                    />\n                  </Grid>\n                </Grid>\n                <Grid container item spacing={0} justify=\"center\" className={classes.row}>\n                  <Grid item lg={12} xl={12} xs={12}>\n                    <label>Scale:</label>\n                  </Grid>\n                </Grid>\n                <Grid container item spacing={0} justify=\"center\" className={classes.row}>\n                  <Grid item lg={12} xl={12} xs={12}>\n                    <TextField\n                      variant=\"outlined\"\n                      value={scale}\n                      className={classes.textField}\n                      name='scale'\n                      onChange={handleChange}\n                      disabled={includeOptions ? '' : 'disabled'}\n                      type=\"number\"\n                      InputProps={{\n                        className: classes.input\n                      }}\n                    />\n                  </Grid>\n                </Grid>\n                <Grid container item spacing={0} justify=\"center\" className={classes.row}>\n                  <Grid item lg={12} xl={12} xs={12}>\n                    <label>Width:</label>\n                  </Grid>\n                </Grid>\n                <Grid container item spacing={0} justify=\"center\" className={classes.row}>\n                  <Grid item lg={12} xl={12} xs={12}>\n                    <TextField\n                      variant=\"outlined\"\n                      value={width}\n                      className={classes.textField}\n                      name='width'\n                      onChange={handleChange}\n                      disabled={includeOptions ? '' : 'disabled'}\n                      type=\"number\"\n                      InputProps={{\n                        className: classes.input\n                      }}\n                    />\n                  </Grid>\n                </Grid>\n                <Grid container item spacing={0} justify=\"center\" className={classes.row}>\n                  <Grid item lg={12} xl={12} xs={12}>\n                    <label>Dark color:</label>\n                  </Grid>\n                </Grid>\n                <Grid container item spacing={0} justify=\"center\" className={classes.row}>\n                  <Grid item lg={12} xl={12} xs={12}>\n                    <div style={ darkStyles.swatch } onClick={ handleClickDark }>\n                      <div style={ darkStyles.color } />\n                    </div>\n                    { displayDarkColorPicker ? <div style={ darkStyles.popover }>\n                      <div style={ darkStyles.cover } onClick={ handleCloseDark }/>\n                      <SketchPicker color={ darkColor } onChange={ handleChangeDark } />\n                    </div> : null }\n                  </Grid>\n                </Grid>\n                <Grid container item spacing={0} justify=\"center\" className={classes.row}>\n                  <Grid item lg={12} xl={12} xs={12}>\n                    <label>Light color:</label>\n                  </Grid>\n                </Grid>\n                <Grid container item spacing={0} justify=\"center\" className={classes.row}>\n                  <Grid item lg={12} xl={12} xs={12}>\n                    <div style={ lightStyles.swatch } onClick={ handleClickLight }>\n                      <div style={ lightStyles.color } />\n                    </div>\n                    { displayLightColorPicker ? <div style={ lightStyles.popover }>\n                      <div style={ lightStyles.cover } onClick={ handleCloseLight }/>\n                      <SketchPicker color={ lightColor } onChange={ handleChangeLight } />\n                    </div> : null }\n                  </Grid>\n                </Grid>\n              </fieldset>\n            </Grid>\n            <Grid container item spacing={0} justify=\"center\" style={{paddingTop: 50}}>\n              <Grid item lg={6} xl={6} xs={12} style={{textAlign: 'center'}}>\n                {\n                  selectedRenderAs.value === 'canvas' ? \n                    <canvas ref={inputRef} /> :\n                    <img ref={inputRef} />\n                }\n              </Grid>\n            </Grid>\n            <Grid container item spacing={0} justify=\"center\" style={{paddingTop: 40}}>\n              <Grid item lg={6} xl={6} xs={12} style={{textAlign: 'center'}}>\n              <TextField\n                variant=\"outlined\"\n                multiline\n                rows={22}\n                disabled\n                className={classes.textField}\n                value={`import React from 'react';\nimport { useQRCode } from 'react-hook-qrcode';\n\nfunction App() {\n    const [inputRef] = useQRCode({\n        text: '${text}',\n        ${\n          includeOptions ? \n          `options: {\n            level: '${selectedLevel.value}',\n            margin: ${margin},\n            scale: ${scale},\n            width: ${width},\n            color: {\n                dark: '${darkColor}',\n                light: '${lightColor}',\n            },\n          },` : ''\n        }\n    });\n\n    return <${selectedRenderAs.value} ref={inputRef} />;\n}\n\nexport default App;`}\n              />\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </div>\n      <footer>\n        <div>\n          next-qrcode by <a href=\"https://github.com/Bunlong\" target=\"_black\">Bunlong</a>\n        </div>\n      </footer>\n    </div>\n  );\n}\n\nIndex.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Index);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAZA;AAcwBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}